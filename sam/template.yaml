AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: serverless-rds-cluster-automation

Parameters:
  Stage:
    Type: String
    Default: dev

Globals:
  Function:
    Timeout: 10
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub RDSClusterProvisioningTopic-${Stage}

  MySQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub RDSClusterProvisioningQueue-${Stage}

  MySQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref MySQSQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: Allow-SNS-SendMessage
            Effect: Allow
            Principal: "*"
            Action: SQS:SendMessage
            Resource: !GetAtt MySQSQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref MySNSTopic

  MySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref MySNSTopic
      Protocol: sqs
      Endpoint: !GetAtt MySQSQueue.Arn

  ApiHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub RDSApiHandler-${Stage}
      CodeUri: ../lambda/
      Handler: handler.lambda_handler
      Runtime: python3.11
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref MySNSTopic
          REPO_NAME: "shimon23/serverless-rds-cluster-automation"
          GITHUB_SECRET_ID: "github-token"
      Events:
        ApiRequest:
          Type: Api
          Properties:
            Path: /provision-rds
            Method: post
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !Sub RDSClusterProvisioningTopic-${Stage}
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:github-token-*

  QueueConsumerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub RDSQueueConsumer-${Stage}
      CodeUri: ../lambda/
      Handler: handler.sqs_handler
      Runtime: python3.11
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MySQSQueue.Arn
      Policies:
        - SQSPollerPolicy:
            QueueName: !Sub RDSClusterProvisioningQueue-${Stage}
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:github-token-*
      Environment:
        Variables:
          GITHUB_SECRET_ID: "github-token"
          REPO_NAME: "shimon23/serverless-rds-cluster-automation"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint for provisioning RDS"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/provision-rds"

  SNSTopicARN:
    Description: "SNS Topic ARN"
    Value: !Ref MySNSTopic

  SQSQueueURL:
    Description: "SQS Queue URL"
    Value: !Ref MySQSQueue

  ApiHandlerFunctionARN:
    Description: "API Handler Lambda Function ARN"
    Value: !GetAtt ApiHandlerFunction.Arn

  QueueConsumerFunctionARN:
    Description: "Queue Consumer Lambda Function ARN"
    Value: !GetAtt QueueConsumerFunction.Arn
